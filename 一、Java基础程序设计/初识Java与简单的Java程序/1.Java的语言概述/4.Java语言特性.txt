1.简单性
Java语言继承了C++语言的优点，去掉了C++中学习起来比较难的多继承、指针等概念，所以Java语言学习起来更简单，使用起
来也更方便。

2.面向对象
什么是面向对象？
在Java的世界里，一切皆对象。比如：人、狗、手机、电脑等都是对象，所谓的面向对象，就是依靠对象之间的交互来完成事
情，比如：人用手机网上购物，狗吃骨头······

Java的面向对象与c++旗鼓相当，与c++的主要不同点在于多重继承。在Java中，取而代之的是更简单的接口概念，而且与c++
相比，Java提供了更丰富的运行时自省功能。

3.分布式（微服务）
Java有丰富的历程库，用于处理图像的HTTP和FTP之类的TCP/IP协议，Java应用程序能够通过URL打开和访问网络上的对象，
其便捷程度就好像访问本地文件一样。

4.健壮性
Java与c++最大的不同在于Java采用的指针模型可以消除重写内存和损坏数据的可能性。不仅如此，Java编译能够检测许多其
他语言中仅在运行时才能够检测出来的问题。

5.安全性
Java适用于网络/分布式环境，为了达到这个目标，在安全性方面投入了大量的精力。使用Java可以构建防病毒、防篡改的系
统。

从一开始，Java就设计成能够防范常见的各种攻击：
*运行时堆栈溢出。蠕虫和病毒常用的攻击手段。
*破坏自己进程空间之外的内存。
*未经授权读写文件。

6.体系结构中立且具有跨平台性
Java源代码不会针对一个特定平台进行编译,而是生成一种字节码中间文件(class文件),这种文件是平台无关且体系结构中立
的。也就是说,无论一个Java程序是在Windows、Solaris、Linux还是其他具有Java编译器的操作系统下编译,作为编译结果
的字节码文件都是相同的,都可以在任何具有Java虚拟机(JVM)的计算机上运行。JVM能够识别这些字节码文件,JVM将字节
码文件进行转换,使之能够在不同平台上运行。任何操作系统只要安装了JVM,就可以解释并执行这种与体系结构无关的字节
码文件,实现了跨平台。

7.可移植性
Java并不依赖平台，用Java编写的程序可以运用到任何操作系统上。

8.解释性
Java编译程序生成字节码，而不是通常的机器码，这使得Java开发程序比用其他语言开发程序快很多。

9.高性能
Java是一种先编译后解释的语言，所以它不如全编译性语言快。但Java设计者制作了“及时”编译程序，这样就可以实现全
编译了。

10.多线程
Java是多线索语言，它可以同时执行多个程序，能处理不同任务。

11.动态性
Java语言设计成适应于变化的环境，它是一个动态的语言。

