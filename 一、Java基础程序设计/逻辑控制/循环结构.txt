**循环结构

#while循环

while(布尔表达式){
	//语句
}
布尔表达式为true，则执行循环语句；否则结束循环。

注意事项：
1.和if类似，while 下面的语句可以不写{}，但不写的时候只能支持一条语句，建议还是加上{};
2.和if类似，while后的{ 建议和while写在同一行；
3.和if类似，while后面不要多写分号，否则可能导致循环不能正确执行。

代码示例：
//输出1~10的数 ，计算1~10的和
public class Test{
	public static void main(String[] args){
		int i=1;//循环变量的初始条件
		int sum=0;
		while(i<=10){//i<=10为循环变量的判断条件(布尔表达式)
			sum+=i;//sum最后为1~10的和
			System.out.println("i");
			i++;//循环的步进
		}
	}
} 
//计算5的阶乘
public class Main{
    public static void main(String[] args) {
        int i=1;
        int ret=1;
        while(i<=5)
        {
            ret*=i;
            i++;
        }
        System.out.println(ret);
    }

}

#break
break：让循环提前结束
执行到break就会让循环结束

#continue
continue:跳过这次循环，立即进入下次循环。

代码示例：
//1~100内 找到能同时被3和5整除的数
public class Main{
    public static void main(String[] args) {
        int i=1;
        for(i=1;i<=100;i++)
        {
            if(i%15!=0)
            {
                i++
                continue;
            }
	System.out.println(i);
	i++;
        }
    }

}

#for循环
基本语法：
for(表达式1;表达式2;表达式3){
     表达式4;
}

表达式1：用于初始化循环变量初始值设置，在循环最开始时执行，且只执行一次。
表达式2：循环条件，满足则循环继续，否则循环结束。
表达式3：循环变量更新方式。

执行过程
1、2、3、4->2、3、4->2、3、4->2、3、4->2、3、4->···->2为false,循环结束。

代码示例：
打印1~10的数字
for(int i=1;i<=10,i++){
	System.out.println("i");
}

#do while循环
基本语法
do{
      循环条件;
}while(循环条件);

先执行循环语句，再判定循环条件，循环条件成立继续执行，否则循环结束。

注意事项：
1.do while循环最后的分号不要忘记
2.一般do while 很少用到，更推荐使用for 和while.